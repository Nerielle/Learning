@using System.Runtime.InteropServices.ComTypes
@using System.Runtime.Serialization
@model Sandbox.Models.Book

@{
    var isCreating = Model.Id == 0;
    ViewBag.Title = (isCreating) ? "Create" : "Edit";
}


<div data-bind=" visible: !saveCompleted()">

    <h2>@ViewBag.Title</h2>
    @using (Html.BeginForm("Create", "Books", FormMethod.Post,
        new {data_bind = "submit: validateAndSave"}))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Book</h4>
            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="form-group">
                @Html.LabelFor(model => model.AuthorId, "AuthorId", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("AuthorId", null, htmlAttributes: new {@class = "form-control",
                   data_bind ="value: book.AuthorId"})
                    @Html.ValidationMessageFor(model => model.AuthorId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control",
                   data_bind ="value: book.Title"}
               })
                    @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Isbn, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Isbn, new
                    {
                        htmlAttributes = new {@class = "form-control"},
                        data_bind="value: book.Isbn"
                    })
                    @Html.ValidationMessageFor(model => model.Isbn, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Synopsis, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Synopsis, new
                    {
                        htmlAttributes = new {@class = "form-control"},
                        data_bind = "value: book.Synopsis"
                    })
                    @Html.ValidationMessageFor(model => model.Synopsis, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new {htmlAttributes = new
                    {
                        @class = "form-control",
                        data_bind = "value: book.Description"
                    }})
                    @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" data-bind="visible: !sending()">
                    <input type="submit" value="@if (isCreating)
                                                {
                                                    @Html.Raw("Create")
                                                }
                                                else
                                                {
                                                    @Html.Raw("Update")
                                                } " class="btn btn-default"/>
                </div>
                <div class="progress" data-bind="visible: sending">
                    <div class=" progress-bar progress-bar-info progress-bar-striped active"
                         role="progressbar"
                         aria-valuenow="100"
                         aria-valuemin="0"
                         aria-valuemax="100%">
                        <span class="sr-only"></span>
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval", "/Scripts/ViewModels/BookFormViewModel.js")
    <script>
        var viewModel = new BookFormViewModel(@Html.HtmlConvertToJson(Model));
        ko.applyBindings(viewModel);
    </script>
}
